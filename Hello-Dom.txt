+++++++++++++++++==
addEventListener() -- browser functionality to 'listen' for actions and respond as needed.
ex: button on click should do something--keyboard inputs -- async data -> when data is being fetched by site.

document is an object provided by the DOM that enables us to access all HTML elements within a page and perform
CRUD operations on them.
ex: querySelector() returns reference to element needed ( think button or body).
..innerText . property of HTML elements to provide content between tags dynamically via DOM.
..createElement("span" or "div" ..etc) to create HTML elements dynamically using DOM.
..appendChild()..used to add HTML elements dynamically to existing page. 
SEE FILE dom1.html for practical use of all these.

+++NODELIST AND HTMLCollection+++
Both are representations of array but have none of the functionality of arrays. 
length property present which can be used in conjuction with a loop to access their elements using indices.

insertBefore depends on properties of parent node and reference node .

All HTML elements are node but not vice versa

+++++++++=Difference in Sibling Nodes & Sibling Elements +++++++++++++++++
previousElementSibling -> HTML elements only
nextElementSibling  -> HTML elements only
previousSibling -> previous node ( ex comments )
nextSibling-> next node( comment / text / newline etc..)


+++++EVENT PHASES+++++

Target:Element which triggers event listener
CurrentTarget: Element on which event listener is attached.

Events -> Phases , properties and propagation

PHASES ==>0 NONE, 1 CAPTURING -> 2 TARGET -> 3 BUBBLING
event starts from document(root). If listener finds same event on its path, it triggers it as well.


PROPAGATION : flow
stopPropagation():
stopImmediatePropagation():

+++++++++WINDOW SIZING SCROLLING +++++++++++

scroll(x,y)
scrollTo(x,y)

these 2 are same ---  work as absolute.

scrollBy(x,y) -- relative

scrollIntoView() -- scroll to an element in the page. -- true and false in parameter --- 
true means element will be at top -- false means element will be at bottom

getBoundingClientRect()


 
